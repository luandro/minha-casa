version: "2.4"

volumes:
  interface_db:
  wifi_db:
  syncthing:
  portal:
  kerberosagent_recordings:
  kerberosagent_snapshots:
  kerberosagent_config:
  # raspap_config: {}
  config: {}
  influxdb: {}
  grafana: {}
  mqtt: {}
  zigbee2mqtt: {}
  duplicati: {}
  frigate-config: {}
  frigate-media: {}
  wyze-tokens: {}
  tailscale: {}
  netdatalib: {}
  netdatacache: {}
  esphome: {}
  adguardhome_work: {}
  adguardhome_conf: {}
  speedtest-data:
  settings:
  dashboard-data:
  speed-tracker:
  ssl-keys:
services:
  # https://github.com/digidem/starter-interface
  balena-interface:
    build: services/interface
    restart: always
    environment:
      NETWORK_MODE: bridge
    ports:
      - "80:80"
      - "8079:8079"
    volumes:
      - interface_db:/app/db # Stores UI database files
    privileged: true # This can be removed if not using the USB mounting feature
    labels:
      io.balena.features.supervisor-api: 1
      io.balena.features.balena-api: 1
  # https://github.com/RaspAP/raspap-balena
  # Pending: https://github.com/RaspAP/raspap-balena/issues/1
  # raspap:
  #   build: services/raspap
  #   restart: unless-stopped
  #   ports:
  #    - "80:80"
  #   cap_add:
  #     - SYS_TTY_CONFIG
  #     - NET_ADMIN
  #   volumes:
  #     - "raspap_config:/etc/raspap"
  #   dns:
  #     - "127.0.0.1"
  #     - "1.1.1.1"
  #   network_mode: host
  #   pid: host
  #   privileged: true
  #   labels:
  #     io.balena.features.dbus: "1"
  #   devices:
  #     - /dev/tty0
  #     - /dev/tty1
  #   tmpfs:
  #     - /run
  #     - /sys/fs/cgroup
  #     - /var/log/raspap
  #   environment:
  #     RASPAP_SSID: raspap-webgui
  #     RASPAP_SSID_PASS: ChangeMe
  #     RASPAP_COUNTRY: GB
  #     RASPAP_WEBGUI_USER: admin
  #     RASPAP_WEBGUI_PASS: secret
  #     RASPAP_WEBGUI_PORT: 80
  # https://github.com/balena-labs-research/python-wifi-connect
  wifi:
    image: ghcr.io/balena-labs-research/python-wifi-connect:latest
    environment:
      PWC_HOST: bridge
      DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/host/run/dbus/system_bus_socket"
    network_mode: "host"
    restart: always
    volumes:
      - wifi_db:/app/db # Optional if not setting the hotspot ssid and password via the API
    labels:
      io.balena.features.dbus: "1"
    cap_add:
      - NET_ADMIN
    privileged: true # This can be removed if you do not need the LED connectivity indicator.

  # https://github.com/kerberos/agent
  kerberos-agent:
    image: bh.cr/kerberos_io/agent
    tty: true
    ports:
      - "8083:80"
    restart: always
    volumes:
      - 'kerberosagent_recordings:/home/agent/data/recordings:rw'
      - 'kerberosagent_snapshots:/home/agent/data/snapshots:rw'
      - 'kerberosagent_config:/home/agent/data/config:rw'

  # https://hub.docker.com/r/filebrowser/filebrowser
  filebrowser:
    build: services/filebrowser
    restart: unless-stopped
    volumes:
      - portal:/srv/portal
    ports:
      - 8081:80
    command: -- c

  # https://hub.docker.com/r/linuxserver/syncthing/
  syncthing:
    build: services/syncthing
    volumes:
      - syncthing:/config
      - portal:/data/portal
    ports:
      - 8082:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped

  # https://hub.docker.com/_/httpd
  httpd:
    build: services/httpd
    ports:
      - 8080:80
    volumes:
      - portal:/usr/local/apache2/htdocs
    restart: unless-stopped

  # https://hub.docker.com/r/homeassistant/home-assistant
  homeassistant:
    build: services/homeassistant
    network_mode: host
    volumes:
      - config:/config
    labels:
      io.balena.features.dbus: "1"
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: unix:path=/host/run/dbus/system_bus_socket
    privileged: true

  # https://hub.docker.com/_/eclipse-mosquitto
  mqtt:
    build: services/mqtt
    ports:
      - 1883:1883
    volumes:
      - mqtt:/mosquitto/data
    tmpfs:
      - /mosquitto/log

  # https://esphome.io/guides/getting_started_command_line.html#installation
  esphome:
    image: ghcr.io/esphome/esphome
    volumes:
      - esphome:/config
    privileged: true
    network_mode: host

  # https://www.zigbee2mqtt.io/guide/getting-started/#installation
  zigbee2mqtt:
    build: services/zigbee2mqtt
    volumes:
      - zigbee2mqtt:/app/data
    ports:
      - 8089:7000
    privileged: true

  # https://hub.docker.com/r/codercom/code-server
  code-server:
    image: codercom/code-server
    command:
      - --port=9000
      - --auth=none
      - --extensions-dir=/config/.vscode
      - --user-data-dir=/config/.vscode
      - /config
    working_dir: /config
    ports:
      - 8085:9000/tcp
    volumes:
      - config:/config
      - zigbee2mqtt:/config/zigbee2mqtt
      - esphome:/config/esphome
      - frigate-config:/config/frigate
    user: root

  # https://hub.docker.com/_/influxdb
  influxdb:
    image: influxdb
    volumes:
      - influxdb:/var/lib/influxdb
      - 'speedtest-data:/data'
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=balena
      - INFLUXDB_USER=balena
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_DATA_DIR=/data

  # https://hub.docker.com/r/grafana/grafana
  grafana:
    image: grafana/grafana
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - 8084:3000/tcp
  # https://hub.docker.com/r/duplicati/duplicati
  duplicati:
    image: linuxserver/duplicati
    environment:
      PUID: "0"
      PGID: "0"
      CLI_ARGS: --webservice-interface=any
    ports:
      - "8091:8200/tcp"
    tmpfs:
      - /tmp
    volumes:
      - duplicati:/config
      - config:/volumes/config
      - influxdb:/volumes/influxdb
      - grafana:/volumes/grafana
      - zigbee2mqtt:/volumes/zigbee2mqtt
      - frigate-media:/volumes/frigate-media
      - tailscale:/volumes/tailscale
      - netdatalib:/volumes/netdatalib
      - esphome:/volumes/esphome

   # https://blakeblackshear.github.io/frigate/installation
  frigate:
    build: services/frigate
    privileged: true
    ports:
      - "8088:5000"
      - "1935:1935"
      - 8554:8554
      - 8555:8555/tcp
      - 8555:8555/udp
    volumes:
      - frigate-config:/config:ro
      - frigate-media:/media/frigate
    tmpfs:
      - /tmp/cache
    shm_size: 2048M
    environment:
      FRIGATE_RTSP_PASSWORD: "balena"
      CONFIG_FILE: "/config/frigate.yml"
    labels:
      io.balena.features.kernel-modules: 1

  # https://hub.docker.com/r/mrlt8/wyze-bridge/tags
  wyze-bridge:
    image: mrlt8/wyze-bridge
    ports:
      - 8091:5000 # WEB-UI
    volumes:
      - wyze-tokens:/tokens

  # https://hub.docker.com/r/tailscale/tailscale
  tailscale:
    image: tailscale/tailscale
    environment:
      TS_STATE_DIR: /var/lib/tailscale
      TS_SOCKET: /var/run/tailscale/tailscaled.sock
      TS_USERSPACE: false
      TS_AUTH_ONCE: false
      TS_HOSTNAME: homeassistant
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    tmpfs:
      - /tmp
      - /run
    volumes:
      - tailscale:/var/lib/tailscale
    entrypoint:
      - /bin/sh
      - -c
    command:
      - |
        modprobe tun || true
        modprobe wireguard || true
        mkdir -p /dev/net
        [ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200
        /usr/local/bin/containerboot
  # https://github.com/AdGuardTeam/AdGuardHome
  adguard:
    image: "adguard/adguardhome"
    network_mode: host
    privileged: true
    volumes:
      - 'adguardhome_work:/opt/adguardhome/work:rw'
      - 'adguardhome_conf:/opt/adguardhome/conf:rw'
    command: --host 0.0.0.0 --port 8093 --no-check-update --config /opt/adguardhome/conf/AdGuardHome.yaml
  # https://docs.speedtest-tracker.dev
  speedtest-tracker:
        ports:
            - 8092:80
            - 8443:443
        environment:
            - PUID=1000
            - PGID=1000
            - DB_CONNECTION=sqlite
        volumes:
            - speed-tracker:/config
            - ssl-keys:/config/keys
        image: lscr.io/linuxserver/speedtest-tracker:latest
        restart: unless-stopped
  speedtest:
    build: services/speedtest
    privileged: true
    restart: never
    volumes:
        - 'speedtest-data:/data'
    network_mode: host
    labels:
      io.balena.features.supervisor-api: 1
  # https://github.com/balena-labs-projects/connector
  connector:
    image:  bh.cr/balenalabs/connector
    restart: always
    labels:
      io.balena.features.balena-api: '1'
      io.balena.features.supervisor-api: 1
    privileged: true
  # https://github.com/balena-labs-projects/dashboard
  dashboard:
    restart: always
    build: services/dashboard
    ports:
      - 8094:80
    volumes:
        - 'dashboard-data:/data'
  # https://github.com/netdata/netdata
  netdata:
    image: netdata/netdata
    privileged: true
    network_mode: host
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.supervisor-api: 1
      io.balena.features.sysfs: 1
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "991" # ls -nd /var/run/balena.sock | awk '{print $4}'